<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.employeeBasicMapper">

    <select id="list" resultType="com.project.vo.employee">
        select
            employeeName,
            employeeId,

            employeePhoneNumber,
            employeeAvatar,
            employeeBirthday,
            employeeGender,
            deptNo,
            deptName
            from employee_dept
        <where>
            <if test="role!=null">
               employeeRole=#{role}
            </if>

            <if test="name!=null">
                and employeeName LIKE CONCAT('%',#{name},'%')
            </if>

            <if test="phoneNumber!=null">
                and employeePhoneNumber=#{phoneNumber}
            </if>

            <if test="gender!=null">
                and employeeGender=#{gender}
            </if>

            <if test="departmentNo!=null">
                and  deptNo=#{departmentNo}
            </if>

            <if test="beginBirthday != null and endBirthday != null">
                and employeeBirthday between #{beginBirthday} AND #{endBirthday}
            </if>

        </where>
    </select>

    <insert id="employeeAdd">
        insert into employeebasic(employeeName,employeePhoneNumber,employeeBirthday,employeeGender,employeePassword) values (#{employee.employeeName},#{employee.employeePhoneNumber},#{employee.employeeBirthday},#{employee.employeeGender},#{password});
    </insert>

    <insert id="employeeJobAdd">
        insert into employeejobinfo(employeeDepartmentNo,employeeRole,employeeJob,employeeId) values (#{employee.employeeDepartmentNo},#{employee.employeeRole},#{employee.employeeJob},#{id})
    </insert>

<!--    <insert id="import_emp" parameterType="list">-->
<!--        insert into employeebasic (employeeName,employeePhoneNumber,employeeBirthday,employeeGender,employeePassword) values-->
<!--        <foreach collection="list" item="employeeBasic" separator=",">-->
<!--            (#{employeeName},#{employeePassword},#{employeePhoneNumber},#{employeeAvatar},#{employeeBirthday},#{employeeGender})-->
<!--        </foreach>-->
<!--    </insert>-->

    <update id="employeeUpdate">
        update employeebasic
            set employeeName = #{updateEmployee.employeeName}, employeePassword = #{password}, employeePhoneNumber = #{updateEmployee.employeePhoneNumber}, employeeBirthday = #{updateEmployee.employeeBirthday}, employeeGender = #{updateEmployee.employeeGender}
            where employeeId = #{updateEmployee.employeeId};
    </update>

    <update id="employeeJobUpdate">
        update employeejobinfo
        set employeeRole = #{updateEmployee.employeeRole}, employeeDepartmentNo = #{updateEmployee.employeeDepartmentNo}, employeeJob = #{updateEmployee.employeeJob}
        where employeeId = #{id};
    </update>

    <select id="findByToken" resultType="com.project.vo.employee_Basic">
        SELECT
            eb.employeeName,
            eb.employeePhoneNumber,
            eb.employeeAvatar,
            eb.employeeBirthday,
            eb.employeeGender,
            eb.employeeId,
            ej.employeeRole,
            ej.employeeJob
        FROM
            employeebasic eb
                LEFT JOIN
            employeejobinfo ej ON eb.employeeId = ej.employeeId
        WHERE
            eb.employeeId = #{employeeId}

    </select>



</mapper>